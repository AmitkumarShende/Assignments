Prepare rules for the all the data sets 
1) Try different values of support and confidence. Observe the change in number of rules for different support,confidence values
2) Change the minimum length in apriori algorithm
3) Visulize the obtained rules using different plots 


**************************************Answer************************
install.packages('arules')
install.packages('arulesViz')

library(arules)
library(arulesViz)

Mymovies = read.csv("D:/Data_science/Assignments/Assignments_association/Assign_My_movies/my_movies_final.csv")
View(Mymovies)
str(Mymovies)

rules <- apriori(as.matrix(Mymovies,parameter=list(support=0.2, confidence = 0.5,minlen=5)))
rules

inspect(head(sort(rules, by = "lift")))  

head(quality(rules))

***********************************Output****************************
> library(arules)
> library(arulesViz)
> 
> Mymovies = read.csv("D:/Data_science/Assignments/Assignments_association/Assign_My_movies/my_movies_final.csv")
> View(Mymovies)
> str(Mymovies)
'data.frame':	10 obs. of  10 variables:
 $ Sixth.Sense  : int  1 0 0 1 1 1 0 0 1 1
 $ Gladiator    : int  0 1 0 1 1 1 0 1 1 1
 $ LOTR1        : int  1 0 1 0 0 0 0 0 0 0
 $ Harry.Potter1: int  1 0 0 0 0 0 1 0 0 0
 $ Patriot      : int  0 1 0 1 1 1 0 1 1 0
 $ LOTR2        : int  1 0 1 0 0 0 0 0 0 0
 $ Harry.Potter2: int  0 0 0 0 0 0 1 0 0 0
 $ LOTR         : int  0 0 0 0 0 0 0 0 0 1
 $ Braveheart   : int  0 1 0 0 0 0 0 0 0 0
 $ Green.Mile   : int  1 0 0 0 0 0 0 0 0 1
> 
> rules <- apriori(as.matrix(Mymovies,parameter=list(support=0.2, confidence = 0.5,minlen=5)))
Apriori

Parameter specification:
 confidence minval smax arem  aval originalSupport maxtime support minlen maxlen target   ext
        0.8    0.1    1 none FALSE            TRUE       5     0.1      1     10  rules FALSE

Algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

Absolute minimum support count: 1 

set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[10 item(s), 10 transaction(s)] done [0.00s].
sorting and recoding items ... [10 item(s)] done [0.00s].
creating transaction tree ... done [0.00s].
checking subsets of size 1 2 3 4 5 done [0.00s].
writing ... [77 rule(s)] done [0.00s].
creating S4 object  ... done [0.00s].
> rules
set of 77 rules 
> 
> inspect(head(sort(rules, by = "lift")))  
    lhs                                   rhs             support confidence lift count
[1] {Gladiator,Green.Mile}             => {LOTR}          0.1     1          10   1    
[2] {Sixth.Sense,Gladiator,Green.Mile} => {LOTR}          0.1     1          10   1    
[3] {Harry.Potter2}                    => {Harry.Potter1} 0.1     1           5   1    
[4] {LOTR}                             => {Green.Mile}    0.1     1           5   1    
[5] {LOTR1}                            => {LOTR2}         0.2     1           5   2    
[6] {LOTR2}                            => {LOTR1}         0.2     1           5   2    
> 
> head(quality(rules))
  support confidence     lift count
1     0.1          1 5.000000     1
2     0.1          1 1.666667     1
3     0.1          1 1.428571     1
4     0.1          1 5.000000     1
5     0.1          1 1.428571     1
6     0.1          1 1.666667     1